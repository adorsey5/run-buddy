:root {
  --primary-color: #fce138;
  --secondary-color: #024e76;
  --tertiary-color: #39a6b2;
}
 
 /* Remove browser-enforced styles & Applies CSS vaules for every element */
 * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
    /* more on this crazy alphanumerical value in a minute! */
    color: var(--tertiary-color);
    font-family: Helvetica, Arial, sans-serif;
  }

  /* Applies flex, and RWD properties to header */
header {
    padding: 20px 35px;
    background-color: var(--tertiary-color);
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    background-image: url("../images/hero-bg.jpg");
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    background-position: 80%;
    z-index: 9999; 
  }
/* Display <h1> elements inline with RUN BUDDY <a> element*/
/* Style <header> with color, text, and margin*/
header h1 {
  font-weight: bold;
  margin: 0;
  font-size: 36px;
  color: var(--primary-color);
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}
  /* Applies styles and color to all of the <a> elements inside the header */
header a {
    text-decoration: none;
    color: var(--primary-color);
  }
  
  /* Applies 7px to the top and bottom, then 0px to the left and right */
  header nav {
    margin: 7px 0;
  }

  /* Styled the <nav> items with flex properties*/
  header nav ul {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    list-style: none;
  }

  /* Styled header children elements. Styled font size in a viewport width*/
  header nav ul li a {
    padding: 10px 15px;
    font-weight: lighter;
    font-size: 1.55vw;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  }
/* Styled header with hover properties */
  header nav ul li a:hover {
    background: var(--primary-color);
    color: var(--secondary-color);
    border-radius: 15px;
    text-shadow: none;
  }

  /* Styled a consistent padding and hero image to the <section> */
section {
  padding: 60px;
}

  /* Hero Style Start */
  /* Styled hero and hero-form with flexbox properties*/
  .hero {
    background-image: url("../images/hero-bg.jpg");
    background-size: cover;
    background-position: center;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    align-items: flex-start;
    background-attachment: fixed;
    background-position: 80%;
  }

  /* Styled the form and input fields*/
  .hero-form {
    border: 3px solid var(--secondary-color);
    background-color: var(--primary-color);
    padding: 20px;
    color: var(--secondary-color);
    width: 40%;
    margin: 3.5%;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    border-radius: 15px;
  }
/* Styled the <h3> element*/
  .hero-form h3 {
    font-size: 24px;
    margin: 0;
  }
/* Added some space to the <p> element*/
  .hero-form p {
    margin: 5px 0 15px 0;
  }
/* Styled the input fields: added a border, displayed each line separately, bigger font size, extended each input field box to the container, same footer color.*/
.form-input {
  border: 1px solid var(--secondary-color);
  display: block;
  padding: 7px 15px;
  font-size: 16px;
  color: var(--secondary-color);
  width: 100%;
  margin-bottom: 15px;
  border-radius: 10px;
  background-color: rgba(255,255,255, 0.75);
  }
  /*visually highlight the form input field that 
  the user is currently typing in*/
.form-input:focus {
  background-color: rgba(255,255,255, 1);
  outline: none;
  }
/* Added horizontal spacing to the <label> element in the radio buttons*/
.hero-form label {
  margin: 0 5px;
}
/* Styled the "Get Running!" button with navy blue background and yellow text color*/
.hero-form button {
  color: var(--primary-color);
  background-color: var(--secondary-color);
  border: none;
  padding: 10px 20px;
  font-size: 16px;
  border-radius: 10px;
}
/* Styled hero-form button with hover properties */
.hero-form button:hover {
  background-color: var(--tertiary-color);  
}
/* Styled the "CTA" to run the full width of the hero flexbox*/
.hero-cta {
  width: 35%;
  text-align: right;
  margin: 3.5%;
  color: #fff;
  font-size: 18px;
  line-height: 1.2;
}

.hero-cta h2 {
  font-style: italic;
  font-size: 55px;
  color: var(--primary-color);
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}
 
.checkbox-wrapper input, .radio-wrapper input {
  opacity: 0;
}
/* prep the <label> elements
 so that the new buttons can fit inside. */
.checkbox-wrapper label, .radio-wrapper label {
  position: relative;
  left: 10px;
  margin: 10px;
  line-height: 1.6;
}
/*The ::before pseudo-element lets
 us inject content into an element using CSS
 It places this content before everything
  else that currently resides in the element*/
.checkbox-wrapper label::before, .radio-wrapper label::before {
  content: "";
  height: 20px;
  width: 20px;
  background: rgba(255, 255, 255, 0.75);  
  border: 1px solid var(--secondary-color);  
  position: absolute;
  top: -4px;
  left: -30px;
}

.radio-wrapper label::before {
  border-radius: 50%;
}
/*styled another pseudo-element
 to overlay on top of the first one.*/
.radio-wrapper label::after {
  content: "";
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--secondary-color);
  position: absolute;
  left: -29px;
  top: -3px;
  background-image: radial-gradient(circle, var(--tertiary-color), var(--secondary-color));
}

.checkbox-wrapper label::after {
  content: "";
  height: 6px;
  width: 14px;
  border-left: 2px solid var(--secondary-color);
  border-bottom: 2px solid var(--secondary-color);
  position: absolute;
  left: -26px;
  top: 1px;
  transform: rotate(-58deg);
}

/* As soon as an input becomes :checked, however, 
the content and all of the other styles defined 
earlier will take effect. */
.checkbox-wrapper input + label::after, 
.radio-wrapper input + label::after {
  content: none;
}

.checkbox-wrapper input:checked + label::after, 
.radio-wrapper input:checked + label::after {
  content: "";
}
/* Hero Style End */


/* WHAT WE DO SECTION */
 

/* Styled the intro. text with flex box properties*/ 
.intro p {
  line-height: 1.7;
  color: var(--tertiary-color);
  width: 80%;
  font-size: 20px;
  margin: 0 auto;
  text-align: center
}

/* WHAT YOU DO SECTION */

/* Centered the text and added yellow background color*/ 
.steps {
  background: var(--primary-color);
}
/*start adding the flexbox styles to each step */
.step {
  margin: 50px auto;
  padding-bottom: 50px;
  width: 80%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid var(--tertiary-color);
}
/*bottom border applied to every step except the last one.*/
  .step:last-child {
    border-bottom: none;
  }
/*OR Or we could combine :last-child with another pseudo-class, :not,
 to check for the inverse of that being true.
.step:not(:last-child) {
  border-bottom: 1px solid var(--tertiary-color);
}
*/

/* Scaled the steps with the page. apply more specific instructions for displaying flexbox children on the page, in relation to sibling elements */ 
/*h3 is at least 30% wide and will receive any extra space in the container.*/
.step h3 {
  color: var(--secondary-color);
  font-size: 46px;
  flex: 1 30%;
}
/* .step-info will be at least 70% wide but will receive any extra space in the container at a 2-to-1 ratio. 
In other words, it will receive two more units of unused space than a sibling with a flex-grow value of 1.*/
.step-info {
  flex: 2 70%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
/* restyle the text content elements. change font-size to 18px*/ 
.step-text p {
  color: var(--tertiary-color);
  font-size: 18px;
}

.step-text h4 {
  font-size: 26px;
  line-height: 1.5;
  color: var(--secondary-color);
}
/* Styled the child elements (.step-img & .step-text), of parent element <div class="step-info",
to have flex properties of 1 and 12> */ 
.step-img {
  flex: 1 12%;
  margin-right: 20px;
}
.step-text {
  flex: 12;
}
/*Styled the <img> element to limit its width to be whatever its container is */
.step-img img {
  max-width: 100%;
}
/* Consolidated the selectors into generic class ".section-title" that all headings can pull from */ 
/* Set up flex box properties*/ 
.section-title {
  font-size: 48px;
  color: var(--secondary-color);
  border-bottom: 3px solid;
  padding-bottom: 20px;
  text-align: center;
  margin: 0 auto 35px auto;
  width: 50%;
}

.primary-border {
  border-color: var(--primary-color);
}

.secondary-border {
  border-color: var(--tertiary-color);
}

/* MEET THE TRAINERS SECTION */
/* Converted the Trainer Section into cards*/

/* Styled the <article> elements*/
.trainers {
  width: 100%;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

.trainer {
  margin: 20px;
  flex: 1;
  background: var(--secondary-color);
  color: var(--primary-color);
}

/* Styled the text and image content*/
.trainer img {
  width: 100%;
}
.trainer-bio {
  padding: 25px;
  line-height: 1.3;
}

/* Styled the trainers' heading, subheading and paragrpah text*/
.trainer-bio h3 {
  font-size: 28px;
}

.trainer-bio h4 {
  font-weight: lighter;
  font-size: 22px;
  margin-bottom: 15px;
}

.trainer-bio p {
  font-size: 17px;
}

/* REACH OUT SECTION START */
/* Added blue background and center alignment to the section. Yellow color for the section <h2> element*/
.contact {
  background: var(--secondary-color);
}
.contact h2 {
  color: var(--primary-color);
}
.contact-info {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
/* select all elements that are direct children of anything with a class of contact-info.*/
.contact-info > * {
  flex: 1;
  margin: 15px;
}
/* Styled the height and width of the <iframe>*/
.contact-info iframe {
  height: 400px;
}
/* Styled the map and contact info containers to site next to each other in a two column layout*/
.contact-info div {
  color: white;
}
/* Applied font color, font size to <h3>. Added spacing, line height, font size, link color to the contact info. */
.contact-info h3 {
  color: var(--primary-color);
  font-size: 32px;
}

.contact-info p, .contact-info address {
  margin: 20px 0;
  line-height: 1.5;
  font-size: 16px;
  font-style: normal;
}

.contact-form input, .contact-form textarea {
  border: 1px solid var(--secondary-color);
  display: block;
  padding: 7px 15px;
  font-size: 16px;
  color: var(--secondary-color);
  width: 100%;
  margin-bottom: 15px;
  margin-top: 5px;
  border-radius: 10px;
}

.contact-form button {
  width: 100%;
  border: none;
  background: var(--primary-color);
  color: var(--secondary-color);
  text-align: center;
  padding: 15px 0;
  font-size: 16px;
  border-radius: 10px;
}

/* Styled hero-form button with hover properties */
.contact-form button:hover {
  color: var(--primary-color);
  background: var(--tertiary-color);
}

.contact-info a {
  color: var(--primary-color);
}
/* REACH OUT STYLES END */

/* FOOTER SECTION */
/* Style <footer> with color, text, and margin*/
footer {
  background: var(--primary-color);
  width: 100%;
  padding: 40px 35px;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
footer h2 {
  color: var(--secondary-color);
  font-size: 30px;
  margin: 0;
}
footer div {
  line-height: 1.5;
  text-align: right;
}
footer a {
  color: var(--secondary-color);
}

/* Utilities*/
.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.flex-row {
  display: flex;
}

/* MEDIA QUERY FOR SMALLER DESKTOP SCREENS AND SMALLER */
@media screen and (max-width: 980px) {
  header {
    padding-bottom: 0;
    justify-content: center;
    position: relative
  }

  header h1 {
    width: 100%;
    text-align: center;
  }

  header nav ul {
    margin-top: 20px;
    width: 100%;
    justify-content: center;
  }

  header nav ul li a {
    font-size: 20px;
  }

  footer h2, footer div {
    text-align: center;
    width: 100%;
  }
  .hero-cta, .hero-form {
    width: 100%;
  }
  
  .hero-cta {
    text-align: center;
  }
  .section-title {
    width: 80%;
  }
  
  .trainer {
    flex: 0 70%;
  }
  
  .contact-info iframe{
    flex: 1 100%;
  }
}
@media screen and (max-width: 768px) {

  section {
    padding: 30px 15px;
  }

  .step h3 {
    flex: 1 100%;
    text-align: center;
  }

  .step-info {
    flex: 2 100%;
    text-align: center;
    justify-content: center;
  }
/*We didn't want the icon to become the full width, however, 
because it would get too large. So we capped it at 32% width using 
flex-basis and told it not to take up any extra unused space by setting
 flex-grow to 0 */
  .step-img {
    flex: 0 32%;
    margin-right: 0;
    margin-top: 15px;
    margin-bottom: 15px;
  }

  .step-text {
    flex: 100%;  
  }

  @media screen and (max-width: 575px) {

    .hero-form button {
      width: 100%;
    }
  
    .section-title {
      width: 95%;
    }
  
    .intro p {
      width: 100%;
    }
  
    .trainer {
      flex: 0 100%;
    }
  
    .contact-info {
      text-align: center;
    }
  
    .contact-info > * {
      flex: 0 100%;
    }
    .contact-form {
      order: 3;
  }
}
}